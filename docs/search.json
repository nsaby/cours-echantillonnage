[{"path":"index.html","id":"avant-propos","chapter":"1 Avant propos","heading":"1 Avant propos","text":"work Nicolas Saby licensed Creative Commons Attribution-NonCommercial-ShareAlike 3.0 United States License.","code":""},{"path":"WHY.html","id":"WHY","chapter":"2 Introduction","heading":"2 Introduction","text":"Ces quelques notes de cours et de scripts R ont été produits pour un cours de M1 de la Faculté de Tours. https://master-environnement.univ-tours.fr/Ce cours est basé sur les travaux publiés dans le livre (Gruijter et al. 2006). Un descriptif des approches utiles pour la cartographie est également disponible dans l’article de Brus et al (Brus 2019) ainsi que les scripts R associés sur le github: https://github.com/DickBrus/TutorialSampling4DSMCe cours rassemble un sélection choisie de techniques et de codes !","code":""},{"path":"WHY.html","id":"motivations","chapter":"2 Introduction","heading":"2.1 Motivations","text":"Les motivations pour ce cours sont les suivantes:Les cours de statistique classique ne s’attardent pas sur la discipline de l’échantillonnageLa conception d’un protocole d’échantillonnage efficace et efficient est une première étape importante d’un projet de rechercheLe plan d’échantillonnage détermine en grande partie la qualité du résultat finalLes problèmes d’inférence statistique peuvent souvent être évités lorsque la réflexion commence avant que les données ne soient collectées","code":""},{"path":"WHY.html","id":"définition","chapter":"2 Introduction","heading":"2.2 Définition","text":"Le plan d’échantillonnage d’une enquête par sondage se réfèreaux techniques utilisées pour sélectionner un échantillon probabiliste etaux méthodes utilisées pour obtenir des estimations des variables étudiées à partir de l’échantillon sélectionné.définit également l’unité d’échantillonnage qui correspond à la position dans l’espace où des observations de sols vont être effectuées. AU doit de la position, il est possible d’effectuer par exemple un sondage, une fosse ou un échantillon composite.","code":""},{"path":"WHY.html","id":"contenu","chapter":"2 Introduction","heading":"2.3 Contenu","text":"Proposer un aperçu des différents plans d’échantillonnage pour l’étude des milieux naturles et notamment le sol.Proposer un aperçu des différents plans d’échantillonnage pour l’étude des milieux naturles et notamment le sol.Connaissance des types de conception de base pour l’échantillonnage probabiliste : avantages et inconvénients…Connaissance des types de conception de base pour l’échantillonnage probabiliste : avantages et inconvénients…et des types de conception d’échantillonnage dans l’espace plus avancéset des types de conception d’échantillonnage dans l’espace plus avancésConnaissance de la manière dont les informations annexes peuvent être utilisées dans le plan d’échantillonnage…Connaissance de la manière dont les informations annexes peuvent être utilisées dans le plan d’échantillonnage…ou dans l’inférence statistique.ou dans l’inférence statistique.Connaissance de la manière dont les échantillons peuvent être sélectionnés dans R, et comment\nles paramètres statistiques peuvent être estimés…Connaissance de la manière dont les échantillons peuvent être sélectionnés dans R, et comment\nles paramètres statistiques peuvent être estimés…Cela ne concerne pas la manière dont un plan d’échantillonnage peut être évalué ex ante avant la collecte des donnéesThe examples book created following R package versions:","code":""},{"path":"WHY.html","id":"objectifs-dune-étude-de-sol","chapter":"2 Introduction","heading":"2.4 Objectifs d’une étude de sol","text":"Une étude sur le sols peut avoir les objectifs :Estimer des statistiques sommaires (moyenne, total, proportion) ou la fonction de distribution cumulative spatiale (SCDF) pour la zone (ou population) dans son ensemble.Estimer des statistiques sommaires (moyenne, total, proportion) ou la fonction de distribution cumulative spatiale (SCDF) pour la zone (ou population) dans son ensemble.Estimer les mêmes indicateurs statistiques, mais maintenant pour plusieurs sous-domainesEstimer les mêmes indicateurs statistiques, mais maintenant pour plusieurs sous-domainesPour cartographier la variable d’intérêt et donc produire une carte à une résolution définie.Pour cartographier la variable d’intérêt et donc produire une carte à une résolution définie.Selon l’objectif, il conviendra de choisir un type d’échantillonnage différent .Dans ce cours, nous ne sommes pas intéressés par les changements au fil du temps de la variable d’intérêt. Nous faisons l’hypothèse que cette dernière ne change pas pendant la période d’enquête. Nos","code":""},{"path":"WHY.html","id":"léchantillonnage-probabiliste-vs-non-probabiliste","chapter":"2 Introduction","heading":"2.5 L’échantillonnage probabiliste vs non probabiliste","text":"Pour estimer les statistiques sommaires comme les totaux ou les moyennes, l’échantillonnage probabiliste est le plus appropriéPar échantillonnage probabiliste, entend un échantillonnage où la position dans l’espace des unité d’échantillonnage est tiré au hasard par un algorithme et est donc aléatoire. Ces échantillonnage sont tel que :Toutes les unités de population ont une probabilité > 0 d’être sélectionnéesLes probabilités d’inclusion sont connuesNB Les probabilités d’inclusion ne doivent pas forcément être égales !Il existe de nombreuses façons de sélectionner les unités de population avec un échantillonnage probabilistePour faire une carte par des techniques de modélisation comme la géostatistique, un échantillonnage qui répartit bien les observations dans l’espace géographique est plus approprié et tirer les positions au hasard n’est pas nécessaire.","code":""},{"path":"WHY.html","id":"approche-basée-sur-un-modèle-ou-basée-sur-un-plan-déchantillonnage","chapter":"2 Introduction","heading":"2.6 Approche basée sur un modèle ou basée sur un plan d’échantillonnage","text":"la production de statistiques sur une zone d’étude implique l’utilisation d’un estimateur à partir d’un ensemble d’observations recueillies selon un protocole d’échantillonnage. Le lien entre l’estimateur et le protocole d’échantillonnage est important.D’après le livre (Gruijter et al. 2006), la théorie de l’échantillonnage sépare les techniques de sélection des unités d’échantillonnage en deux grandes approches:Model based : L’incertitude des estimateurs est obtenu à partir d’un modèle stochastique.Model based : L’incertitude des estimateurs est obtenu à partir d’un modèle stochastique.Design based : l’incertitude des estimateurs est calculée à partir des probabilités d’inclusionsDesign based : l’incertitude des estimateurs est calculée à partir des probabilités d’inclusions","code":""},{"path":"WHY.html","id":"population-discrète-et-population-continue","chapter":"2 Introduction","heading":"2.7 Population discrète et population continue","text":"Nous devons bien distinguer deux types de populations :Les populations discrètes : les objets naturels discrets correspondent naturellement aux unités d’échantillonnage. Le nombre total d’unités d’échantillonnage dans la population (\\(N\\)) est finieLes populations discrètes : les objets naturels discrets correspondent naturellement aux unités d’échantillonnage. Le nombre total d’unités d’échantillonnage dans la population (\\(N\\)) est finiePopulations continues :\nles unités d’échantillonnage doivent être définies, par exemple carrés de 1 km × 1 kmPopulations continues :\nles unités d’échantillonnage doivent être définies, par exemple carrés de 1 km × 1 kmMaisNombre total d’unités d’échantillonnage dans une population continue peut être finie ou infinie\nFini : tous les carrés disjoints de 1 km multipliés par 1 km dans une zone\nInfini : points dans une zone\nNombre total d’unités d’échantillonnage dans une population continue peut être finie ou infinieFini : tous les carrés disjoints de 1 km multipliés par 1 km dans une zoneInfini : points dans une zone","code":""},{"path":"WHY.html","id":"plan","chapter":"2 Introduction","heading":"2.8 Plan","text":"Ce cours présente ainsi d’abord un ensemble de techniques relirées à l’échantillonnage probabiliste.IL aborde également des techniques pour l’échantillonnage pour la cartographie.Echantillonnage aléatoire simpleEchantillonnage aléatoire stratifiéEchantillonnage alétoire systématiqueEchanillonnage pour la cartographie","code":""},{"path":"WHY.html","id":"details-techniques","chapter":"2 Introduction","heading":"2.9 Details techniques","text":"Ces notes ont été produites par RStudio en utilisant bookdown. Le site website est en ligne via github NetlifyLa version de ce livre numérique été produite avec R version 4.1.1 (2021-08-10) et les package suivants:\nTable 2.1: Packages used book\n","code":""},{"path":"data.html","id":"data","chapter":"3 Données","heading":"3 Données","text":"","code":""},{"path":"data.html","id":"statistiques-globales","chapter":"3 Données","heading":"3.1 Statistiques globales","text":"Pour la partie s’interessant aux statistiques globales, nous basons nos exercices sur une réalité simulée d’une valeur de carbone dans un parcelle agricole. Ce champ été simulé en utilisant des techniques géostastitques.L’objet correspond à un tableau comportant 3 colonnes.\nles coordonnées avec s1 et s2\nles valeurs simulées sim1Chaque coordonnée correspond au centre d’un pixelIl est donc facile de transformer le tableau en une grille de type SpatialPixelsDataframe. Pour cela, passe par une structure de type SpatialPointDataframe dans un premier temps.Voici la structure de l’objet de type sp.Il est assez simple de faire une carte avec le package tmap\nFigure 3.1: Notre réalité: un champ aléatoire simulé avec un variogramme de type exponentiel\nL’histogramme de la propriété ressemble à ceci:\nFigure 3.2: Histogramme de la population\nLa moyenne vraie de la population vaut ainsi","code":"\nchamp <- read.csv('data/simulatedField_1Exp25.csv')\n\nhead(champ)##    s1  s2     sim1\n## 1 0.5 0.5 7.184881\n## 2 1.5 0.5 7.366762\n## 3 2.5 0.5 7.417718\n## 4 3.5 0.5 7.305573\n## 5 4.5 0.5 7.373427\n## 6 5.5 0.5 7.161203\nchampSP <- champ\n# transformer en un vecteur de points\ncoordinates(champSP) <- c('s1','s2') \n# transformer en raster\ngridded(champSP) <- TRUE\n# structure de l'objet\nstr(champSP)## Formal class 'SpatialPixelsDataFrame' [package \"sp\"] with 7 slots\n##   ..@ data       :'data.frame':  10000 obs. of  1 variable:\n##   .. ..$ sim1: num [1:10000] 7.18 7.37 7.42 7.31 7.37 ...\n##   ..@ coords.nrs : num(0) \n##   ..@ grid       :Formal class 'GridTopology' [package \"sp\"] with 3 slots\n##   .. .. ..@ cellcentre.offset: Named num [1:2] 0.5 0.5\n##   .. .. .. ..- attr(*, \"names\")= chr [1:2] \"s1\" \"s2\"\n##   .. .. ..@ cellsize         : Named num [1:2] 1 1\n##   .. .. .. ..- attr(*, \"names\")= chr [1:2] \"s1\" \"s2\"\n##   .. .. ..@ cells.dim        : Named int [1:2] 100 100\n##   .. .. .. ..- attr(*, \"names\")= chr [1:2] \"s1\" \"s2\"\n##   ..@ grid.index : int [1:10000] 9901 9902 9903 9904 9905 9906 9907 9908 9909 9910 ...\n##   ..@ coords     : num [1:10000, 1:2] 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 ...\n##   .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. ..$ : NULL\n##   .. .. ..$ : chr [1:2] \"s1\" \"s2\"\n##   ..@ bbox       : num [1:2, 1:2] 0 0 100 100\n##   .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. ..$ : chr [1:2] \"s1\" \"s2\"\n##   .. .. ..$ : chr [1:2] \"min\" \"max\"\n##   ..@ proj4string:Formal class 'CRS' [package \"sp\"] with 1 slot\n##   .. .. ..@ projargs: chr NA\ntm_shape(champSP) +\n  tm_raster()+\ntm_layout(legend.outside = TRUE)\nggplot(champ, \n       aes(x=sim1)) + \n  geom_histogram(bins = 50)\nMoy = mean(champ$sim1)\n\nMoy## [1] 5.298602"},{"path":"data.html","id":"cartographie","chapter":"3 Données","heading":"3.2 Cartographie","text":"Pour illuster les différents plans possible pour la cartographie, nous prenons de jeus de données en exemple","code":""},{"path":"data.html","id":"contour-dune-parcelle","chapter":"3 Données","heading":"3.2.1 Contour d’une parcelle","text":"le contour d’une parcelle est fourni par le package spcosa. Sa forme est complexe et permet de bien illustrer les caractéristiques des plans d’échantillonnage proposés.\nFigure 3.3: Contour d’une parcelle agricole\n","code":"\nshpFarmsum <- readOGR(dsn = system.file(\"maps\", package = \"spcosa\"), layer = \"farmsum\")## OGR data source with driver: ESRI Shapefile \n## Source: \"D:\\nsaby\\R\\win-library\\4.1\\spcosa\\maps\", layer: \"farmsum\"\n## with 1 features\n## It has 4 fields\ntm_shape(shpFarmsum) + \n  tm_borders()"},{"path":"data.html","id":"covariables-rasters-en-australie","chapter":"3 Données","heading":"3.2.2 Covariables rasters en Australie","text":"Un ensemble de 5 rasters sont disponibles pour une parcelle située en Australie dans un zone viticole appelée ‘Hunter vallée.’Altitudel’orientation de la pentepenteindice de topographiel’indice de végétation normalisé\nFigure 3.4: Covariables raster en Australie\n","code":"\n#Read data with coordinates and other attributes of fine grid (discretization of study area)\nload(file=\"Data/HunterValley4Practicals.RData\")\ngrdHunterValley2 <- grdHunterValley\ncoordinates(grdHunterValley2) <- c('Easting','Northing')\ngridded(grdHunterValley2) <- TRUE\n\ntm_shape(grdHunterValley2) + \n  tm_raster(col = c(\"elevation_m\",\"slope_deg\",\"cti\",\"ndvi\") )"},{"path":"SI.html","id":"SI","chapter":"4 Echantillonnage aléatoire simple","heading":"4 Echantillonnage aléatoire simple","text":"","code":""},{"path":"SI.html","id":"définition-1","chapter":"4 Echantillonnage aléatoire simple","heading":"4.1 Définition","text":"Les unités sont sélectionnées avec une probabilité égale et indépendamment les unes des autres ; également appelé “échantillonnage aléatoire indépendant (IRS)”Deux sous-types :Deux sous-types :avec remise (SIR)avec remise (SIR)sans remise (SI)sans remise (SI)Cette distinction n’est pas pertinente pour des populations infiniesCette distinction n’est pas pertinente pour des populations infiniesToutes les combinaisons de \\(n\\) unités de population (tous les échantillons de \\(n\\) unités) ont une probabilité égale d’être sélectionnésToutes les combinaisons de \\(n\\) unités de population (tous les échantillons de \\(n\\) unités) ont une probabilité égale d’être sélectionnés","code":""},{"path":"SI.html","id":"mise-en-oeuvre-avec-un-logiciel","chapter":"4 Echantillonnage aléatoire simple","heading":"4.2 Mise en oeuvre avec un logiciel","text":"","code":""},{"path":"SI.html","id":"pour-les-polutations-discrètes","chapter":"4 Echantillonnage aléatoire simple","heading":"4.2.1 Pour les polutations discrètes","text":"","code":""},{"path":"SI.html","id":"excel","chapter":"4 Echantillonnage aléatoire simple","heading":"4.2.1.1 Excel","text":"Voici la procédure:Utiliser la fonction ALEA dans une colonne ajouter au tableau des coordonnées à choisirCopier coller en valeur le résultat de la fonction ALEA dans une nouvelle colonneClasser le tableau par ordre croissant selon la colonne créée à l’étape 2Choisir les n premiers points du tableau","code":""},{"path":"SI.html","id":"avec-r","chapter":"4 Echantillonnage aléatoire simple","heading":"4.2.1.2 Avec R","text":"Voici comment tirer au hasard des positions dans l’espace à partir de la liste des pixels.Il est possible alors d’extraire les valeurs de carbone simulée pour les pixels tirés au hasard","code":"\nn = 20\n\n#fixer la graine pour les tirages aléatoires\nset.seed(5602)\n\n# Creation des identifiants des lignes\nid = 1:10000\n# ou\nid = seq( from = 1, to = 10000, by = 1)\n# tire au hasard n valeurs parmi 10000\nMesIds <- sample( x = id  , size = n)\n\nMesIds <- sort(MesIds)\n# Les coordonn?es\nchamp[ MesIds , 1:2 ]##        s1   s2\n## 220  19.5  2.5\n## 286  85.5  2.5\n## 564  63.5  5.5\n## 1631 30.5 16.5\n## 1740 39.5 17.5\n## 2202  1.5 22.5\n## 2630 29.5 26.5\n## 3105  4.5 31.5\n## 3180 79.5 31.5\n## 4063 62.5 40.5\n## 5125 24.5 51.5\n## 6048 47.5 60.5\n## 6209  8.5 62.5\n## 6355 54.5 63.5\n## 7589 88.5 75.5\n## 7666 65.5 76.5\n## 7723 22.5 77.5\n## 7897 96.5 78.5\n## 8220 19.5 82.5\n## 9119 18.5 91.5\nterrain1 <- champ[ MesIds, \"sim1\" ]\nterrain1##  [1] 5.088422 5.870447 4.565427 3.839903 4.177815 6.237273 5.100200 5.643163\n##  [9] 6.107451 5.163339 5.708381 6.154790 6.040184 6.388020 6.277084 5.526610\n## [17] 6.171215 5.415374 6.536455 4.433357"},{"path":"SI.html","id":"avec-r-pour-les-populations-continues","chapter":"4 Echantillonnage aléatoire simple","heading":"4.2.2 Avec R pour les populations continues","text":"1 Déterminer les coordonnées minimales et maximales s1 et s2\ndu domaine (boîte englobante)2 Tirez deux coordonnées (pseudo-)aléatoires indépendantes \\(s_{1,v}\\)\net \\(s_{2,aleat}\\)Utilisez une routine de point dans le polygone pour déterminer si (\\(s_{1,v}\\),\\(s_{2,aleat}\\)) tombe dans la zoneUtilisez une routine de point dans le polygone pour déterminer si (\\(s_{1,v}\\),\\(s_{2,aleat}\\)) tombe dans la zoneRépétez les étapes 2 et 3 jusqu’à ce que n positions soient sélectionnéesRépétez les étapes 2 et 3 jusqu’à ce que n positions soient sélectionnéesLe package sp offre la fonction spsample pour effectuer cette procédure à partir de couches SIG.\nFigure 4.1: Exemple d’échantillonnage aléatoire simple, avec 20 points SI(20)\nLe package sf qui va remplacer progressivement sp contient la fonction st_sample.\nFigure 4.2: Exemple d’échantillonnage aléatoire simple, avec 20 points SI(20), avec le package sf\n","code":"\nMonEch <- spsample( x = champSP ,\n                    n  = n ,\n                    type = \"random\")\n\n\nSI <- tm_shape(champSP) +\n  tm_raster()+\n  tm_shape(MonEch)+\n  tm_symbols()+\ntm_layout(legend.outside = TRUE)\n\nSI\nMonEchSF <- st_sample( x = as(champSP,'sf') ,\n                    size  = n ,\n                    type = \"random\")\n\n\nSI <- tm_shape(champSP) +\n  tm_raster()+\n  tm_shape(MonEchSF)+\n  tm_symbols()+\ntm_layout(legend.outside = TRUE)\n\nSI"},{"path":"SI.html","id":"calcul-des-estimateurs","chapter":"4 Echantillonnage aléatoire simple","heading":"4.3 Calcul des estimateurs","text":"Dans cette partie nous explorons les techniques pour calculer les estimateurs des paramètres statistiques à partir des données collectées.","code":""},{"path":"SI.html","id":"lestimateur-de-horvitz-thompson","chapter":"4 Echantillonnage aléatoire simple","heading":"4.3.1 l’estimateur de Horvitz-Thompson","text":"L’estimateur H-T du total est \\(\\hat t = \\sum{z_i/\\pi_i}\\)L’estimateur H-T de la moyenne est \\(\\hat{\\overline{t} } = 1/N\\sum_{=1}^n{z_i/\\pi_i}\\)\\(\\pi\\) est la probabilité qu’un site d’échantillonnage soit inclu dans l’échantillon (probabilité d’inclusion)\\(z_i/\\pi_i\\) s’appelle les valeurs étenduesCette formule fonctionne pour n’importe quel plan d’échantillonnage avec \\(\\pi_i\\) connusPour un SIR, la probabilité qu’un site soit choisi pour un tirage vaut \\(1/N\\)avec \\(n\\) tirage, elle vaut \\(\\pi_i = n/N\\)Le total peut donc être estimé par \\(N/n\\sum_{=1}^n{z_i } = N \\hat{z}\\)","code":""},{"path":"SI.html","id":"la-moyenne-pour-la-population-discrète-finie","chapter":"4 Echantillonnage aléatoire simple","heading":"4.3.2 La moyenne pour la population discrète finie","text":"Avec le plan aléatoire simple, le calcul de la moyenne est très simpleA comparer avec la moyenne de la population \\(5.2986022\\)","code":"\n# simulation du terrain\nterrain2 <- over(MonEch,champSP)\n\nMoyEst <- mean(terrain2$sim1)\n\nMoyEst## [1] 4.935534"},{"path":"SI.html","id":"la-variance-spatiale-et-variance-déchantillonnage","chapter":"4 Echantillonnage aléatoire simple","heading":"4.3.3 La variance spatiale et variance d’échantillonnage","text":"Ne confondez pas la variance spatiale et la variance d’échantillonnage !La variance spatiale (variance de population) est une caractéristique de la populationLa variance d’échantillonnage est une caractéristique d’une stratégie d’échantillonnage,\nc’est-à-dire une combinaison d’un plan d’échantillonnage et d’un estimateurSon estimation dans le cas d’un SIR pour une population dite infinie\\(\\hat{V}(\\hat{ \\overline{z} } ) = \\frac{\\hat{S^2}(z) } {n}\\)soit\\(\\hat{V}(\\hat{ \\overline{z} } ) = \\frac{1} {(n(n-1))} \\sum_{=1}^n (z_i - \\hat{ \\overline{z} })\\)Mais l’estimateur peut être utilisé pour les populations finie\\(\\hat{V}(\\hat{ \\overline{z} } ) = (1 - \\frac{n}N) \\frac{\\hat{S^2}(z) } {n}\\)avec\n\\((1 - \\frac{n}N)\\) correspondant à la correction pour les populations finies","code":"\n# Variance d'échantillonnage de MoyEst\nV <- var(terrain2$sim1) / n"},{"path":"SI.html","id":"linterval-de-confiance","chapter":"4 Echantillonnage aléatoire simple","heading":"4.3.4 l’interval de confiance","text":"Le calcul de l’interval de confiance sur la moyenne nécessite de faire une hypothèse sur la distribution de \\(\\hat{ \\overline{z} }\\)Pour le un nombre \\(n\\) grand (>30) et si la distribution de la propirété dans l’espace n’est pas trop asymétrique, l’hypothèse de normalité est réalisteL’intervalle de confiance à \\(100(1-\\alpha)\\) % est:\\(\\hat{ \\overline{z} }\\pm u_{1-\\alpha/2}.\\sqrt{V(\\hat{\\overline z}) }\\)où \\[u_{1-\\alpha/2}\\] est le \\((1-\\alpha/2)\\) quantile de la loi normale \\(u\\).\\(n\\) number sampling observations compute mean, eg \\(n_h*H\\).Pour des \\(n\\) petit (<30), la loi de Student est plus adaptée. obtient:\\(\\hat{ \\overline{z} }\\pm t_{1-\\alpha/2}^{(n-1)}.\\sqrt{V(\\hat{t^l}) }\\)où \\[t^{(n-1)}_{1-\\alpha/2}\\] est le \\((1-\\alpha/2)\\) quantile de la loi de Student \\(t\\) avec \\((n-1)\\) degrees freedom. \\(n\\) number sampling observations compute mean, eg \\(n_h*H\\).Voici comment le mettre en oeuvre dans \\(`R`\\)","code":"\n# calcul du quantile\nzalpha <- qnorm(p = 1- (0.05/2), mean = 0, sd = 1)\n# si n est petit < 30\ntalpha <- qt(p = 1- (0.05/2) , df = n-1)\n\n# calcul de l'interval de confiance selon les deux lois\nIC <- zalpha * sqrt(V)\nICT <- talpha * sqrt(V)\n\nc(IC,ICT)## [1] 0.3990766 0.4261695\n# comme n< 30, on garde ICT\n# Est-ce que la vraie moyenne est dans l'IC student\nMoy < MoyEst + ICT## [1] TRUE\nMoy > MoyEst - ICT## [1] TRUE\n2 *ICT## [1] 0.8523391\ncbind(MoyEst, ICbas = MoyEst - ICT, ICHaut =MoyEst + ICT, Moy)##        MoyEst    ICbas   ICHaut      Moy\n## [1,] 4.935534 4.509364 5.361703 5.298602"},{"path":"SI.html","id":"simulations-dun-interval-de-confiance","chapter":"4 Echantillonnage aléatoire simple","heading":"4.4 Simulations d’un interval de confiance","text":"Dans cette partie, nous allons tenter d’appréhender l’incertitude de l’estimation de l’indicateur à travers la réalisation de plusieurs échantillonnages simulés de 20 échantillons.Pour cela, nous tirons au hasard 20 points 10000 fois et nous effectuons la jointure spatiale avec la couche SIG supposée représenter la réalité terrain.calcule ensuite, par réplication, les estimations de la moyenne, de la variance d’échantillonnage et de l’intervace de confiance de la moyenne.Pour se rendre compte de l’intervalle de confiance à 95 %, nous représentons sur le graphique suivant pour les 100 premiers tirages, les estimations de la moyenne, et de son intervalle. Nous représentons également la vraie moyenne calculée sur tous les pixels: \\(5.2986022\\)\nFigure 4.3: Représentation de l’intervalle de confiance à 95 % et de la vraie moyenne en rouge pour chaque simulation\nEnfin, il est possible de calculer sur l’ensemble des réalisations, le nombre de fois que la vraie moyenne tombe en dehors de l’intervalle de confiance. Ce qui donne :OUI, 95 % comme attendu !","code":"\nn = 20\nrep = 10000\n\nN = n * rep\nMonEch <- spsample( champSP , N , type = \"random\")\n\n# on récupère les valeurs de carbone\nterrainSimul <- over(MonEch,champSP)\nterrainSimul$id <- rep(1:rep,n)\n\nMesMoys <- aggregate(terrainSimul$sim1,\n                     by = list(terrainSimul$id),\n                     FUN = mean)\n\nMesVarsEch <- aggregate(terrainSimul$sim1,\n                        by = list(terrainSimul$id),\n                        FUN = var) \n\nMesVarsEch$x <- MesVarsEch$x / 20\n\nMesStats <- cbind.data.frame(MesMoys,MesVarsEch$x)\ncolnames(MesStats) <- c('Group','Moy','VarEch')\n\nMesStats$UCI <- MesStats$Moy + talpha * sqrt(MesStats$VarEch)\nMesStats$LCI <- MesStats$Moy - talpha * sqrt(MesStats$VarEch)\nggplot(MesStats[ MesStats$Group %in% 1:100  , ]) + \n  geom_pointrange(size = 0.62, \n                aes(x = Group, ymin = UCI, ymax = LCI, y = Moy)) +\n  geom_abline(intercept =  Moy, slope = 0, color = \"red\")\nMesStats$test <- ifelse(Moy > MesStats$LCI,\n                        ifelse(Moy< MesStats$UCI,\n                               1,0),\n                        0)\n\n100* sum(MesStats$test)/rep## [1] 94.82"},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"léchantillonnage-aléatoire-stratifié","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5 L’échantillonnage aléatoire stratifié","text":"Pour ce type d’approche, la population ou la zone d’étude est subdivisée en sous-populations, appelées strates.Les strates ne peuvent pas se chevaucher, et leur union doit correspondre à la population étudiée.Dans chaque strate, un échantillon est sélectionné au hasardLes strates peuvent être échantillonnées de nombreuses manières, par exemple par échantillonnage aléatoire (SI). Cela conduit à un échantillonnage aléatoire simple stratifié (STSI)La méthode de sélection des unité par SI est appliquée à chaque strate séparément","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"pourquoi-stratifier","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.1 Pourquoi stratifier ?","text":"Deux raisons possibles :Les estimations des paramètres statistiques pour la zone sont plus précisesNous voulons des estimations séparées des paramètres statistiques pour les sous-populations","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"comment-stratifier","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.2 Comment stratifier ?","text":"Deux approches :Stratification à l’aide d’un variables auxiliairesStratification à l’aide d’un variables auxiliairesVariable catégorielle (unités cartographiques)Variable catégorielle (unités cartographiques)variable quantitative (par exemple, images de télédétection)variable quantitative (par exemple, images de télédétection)Stratification par la position géographique uniquement (X et Y)Stratification par la position géographique uniquement (X et Y)","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"estimateurs-stsi","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.3 Estimateurs STSI","text":"L’estimateur de la moyenne STSI est le suivant\\(\\hat{ \\overline{z} } = \\sum_{h=1}^{H} w_h \\hat{\\overline{z} }_{h}\\)avec \\(w_h = A_h/\\sum_{h}A_h\\) et \\(\\hat{\\overline{z} }_{h}\\) est l’estimateur SI de chaque strate \\(h\\) avec un échantillonnage aléatoire simple.La variance d’échantillonnage de la moyenne expérimentale des \\(z\\) est :\\[\\begin{equation}\n\nV(\\hat{ \\overline{z^l} } )  = \\sum_{h=1}^{H} w_h^2 \\frac{ \\hat{ S^2_h} (\\hat{ \\overline{z^l} } ) }{n_h}\n\\end{equation}\\]où \\(\\hat{ S^2_h} (\\hat{ \\overline{z^l} })\\) est la variance SI dans la strate \\(h\\) :\\[\\begin{equation}\n\\hat{ S^2_h} (\\hat{ \\overline{z^l} })= \\frac{1}{n_h-1}\\sum_{=1}^{n_h} ( z^l_{hi}  -\\hat{\\overline{z}}_h^l )\n\\end{equation}\\]","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"stratification-géographique-par-strates-compactes","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.4 Stratification géographique par strates compactes","text":"Parfois, il n’existe pas d’information priori sur la variabilité spatiale de la propriété visée. Dans ce cas, une bonne répartition spatiale peut","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"définition-2","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.4.1 Définition","text":"Dans cette approche, les \\(n\\) observations sont réparties de manière optimale au sein de la zone d’étude. Pour cela, utilise un critère qui minimise la distance entre les observations et un discrétisation de la zone d’étude.\nLa moyenne du carré de la plus courte distance au point j:\\(MCPCD_j = 1/N \\sum^N_{=1}min_j(D_{ij}^2)\\)Le critère \\(MCPCD_j\\) peut être minmisé en utilisant l’algorithme des K-moyenneIl existe un package R spcosa de Walvoort, Brus, Gruijter (2010).Dans cette appraoche, il n’est pas nécessaire de définir un variogramme priori pour l’optimisation de la répartition des \\(n\\) observations. Les strates ainsi définies sont appelées Strates compactes","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"estimateurs-stsi-1","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.4.2 Estimateurs STSI","text":"Ici, comme les strates ont la même surface et donc le même poids, peut simplifier les estimateursEn effet, peut simplifier les poids : \\(w_h = A_h/\\sum_{h}A_h = 1/H\\)La moyenne:\\[\\begin{equation}\n\n\\hat{ \\overline{z} } = \\sum_{h=1}^{H} \\frac1H \\hat{\\overline{z} }_{h}\n\\end{equation}\\]et\\[\\begin{equation}\n\\hat{\\overline{z}}_{h} =\\frac1{n_h} \\sum_{=1}^{n_h}z_i\n\\end{equation}\\]Si en plus le nombre d’observations est le même par strate (\\(n_h\\)), obtient une formule assez simple\\[\\begin{equation}\n\n\\hat{ \\overline{z} } =  \\frac1N \\sum_{=1}^{N} z_i\n\\end{equation}\\]Pour la variance d’échantillonnage, il en va de même.\\[\\begin{equation}\nV(\\hat{ \\overline{z^l} } )  = (\\frac1H)^2 \\sum_{h=1}^{H}  \\frac{ \\hat{ S^2_h} (\\hat{ \\overline{z^l} } ) }{n_h}\n\\end{equation}\\]","code":""},{"path":"léchantillonnage-aléatoire-stratifié.html","id":"implémentation","chapter":"5 L’échantillonnage aléatoire stratifié","heading":"5.4.3 Implémentation","text":"Il est conseillé de tirer au hasard 2 points par strate afin de pouvoir calculer une variance. Il suffit ensuite d’adapter le nombre de strate pour atteindre le nombre d’unités d’échantillonnage visé.Avec cette méthode, il est possible de répartir au mieux les unités dans l’espace.Ici, avait retenu 20 unités, soit donc 10 strates.Comparons les deux approches: SI et STSI avec strates compactesExaminons ce que donne la simulation pour le calcul de la moyenne. interroge ainsi au droit des pixels les points d’échantillonnage. c’est une opération SIG classique. Puis, calule la moyenne en utilisant l’estimateur classique.Et pour la variance, il est nécessaire de calculer la variance par state et de calculer ensuite la moyenne de ces variances.Voici donc la variance SI \\(0.0414588\\) et la variance dans ce cas \\(0.0060433\\)","code":"\nlibrary(raster)\n\nchampSP.r <- raster(champSP)\nres(champSP.r)## [1] 1 1\n#aggregate from 1x1 resolution to 3x3 (factor = 3)\nchampSP.r.aggregate <- aggregate(champSP.r, \n                                 fact = 2)\nres(champSP.r.aggregate)## [1] 2 2\nchampSP.r.aggregate <- as(champSP.r.aggregate , \"SpatialPixels\")\n\n# compute compact geographical strata\nmyStrata <- stratify(champSP.r.aggregate,\n                     nStrata = 10,\n                     equalArea=TRUE, \n                     nTry=5\n                     )\nspcosa::plot(myStrata)\n# obtain the surface areas of the strata\nprint(areaStrata<-getArea(myStrata))##    0    1    2    3    4    5    6    7    8    9 \n## 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n# select randomly n locations from the strata\nmySample <- spsample(myStrata, n = 2)\nplot(myStrata, mySample)\nSTSI <- tm_shape(champSP) +\n  tm_raster()+\n  tm_shape(mySample@sample)+\n  tm_symbols()+\ntm_layout(legend.outside = TRUE)\n\ntmap_arrange(SI, STSI)\nterrainSTSI <- over(mySample@sample,champSP)\n\nMoyEstSTSI <- mean(terrainSTSI$sim1)\n\nMoyEstSTSI## [1] 5.055314\nStratesSTSI <- over(mySample@sample,myStrata@cells)\n\nmyStrata@stratumId[StratesSTSI]##  [1] 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9\nMydata <- cbind.data.frame(\n  strate = myStrata@stratumId[StratesSTSI],\n  z= terrainSTSI$sim1\n  \n)\n\nVarh<-tapply(Mydata$z, INDEX=Mydata$strate,FUN=var)\n\nVStsi <- (1/10^2) * sum(Varh/2)\n# calcul de l'interval de confiance selon les deux lois\nICT <- talpha * sqrt(VStsi)\n\n# comme n< 30, on garde ICT\n# Est-ce que la vraie moyenne est dans l'IC student\nMoy < MoyEstSTSI + ICT## [1] FALSE\nMoy > MoyEstSTSI - ICT## [1] TRUE\ncbind(MoyEstSTSI, \n      ICbas = MoyEstSTSI - ICT,\n      ICHaut = MoyEstSTSI + ICT, Moy)##      MoyEstSTSI    ICbas   ICHaut      Moy\n## [1,]   5.055314 4.892605 5.218023 5.298602"},{"path":"SY-QUICK.html","id":"SY-QUICK","chapter":"6 Echantillonnage aléatoire systématique","heading":"6 Echantillonnage aléatoire systématique","text":"","code":""},{"path":"SY-QUICK.html","id":"définitions","chapter":"6 Echantillonnage aléatoire systématique","heading":"6.1 Définitions","text":"En matière d’échantillonnage dans l’espace, le type d’échantillonnage appelé communément SY signifie un échantillonnage selon une grille régulièrePlusieurs points doivent caractériser cette grilleLa grille est placée au hasard sur la zone. En général, tire au hasard le point origine de la grille dans une zone de la résolution de la grille.La grille est placée au hasard sur la zone. En général, tire au hasard le point origine de la grille dans une zone de la résolution de la grille.L’orientation ne doit pas être aléatoireL’orientation ne doit pas être aléatoireDans les SY, les unités d’échantillonnage sont très bien réparties au sein de la zone d’étude\nAvantage : (1) estimations précises du total, de la moyenne, de la proportion, et (2) il est possible de mettre en oeuvre des techniques de cartographie statistiques comme le krigeage.\nInconvénient : ils n’existe pas d’estimateur non biaisé de la variance d’échantillonnage\nDans les SY, les unités d’échantillonnage sont très bien réparties au sein de la zone d’étudeAvantage : (1) estimations précises du total, de la moyenne, de la proportion, et (2) il est possible de mettre en oeuvre des techniques de cartographie statistiques comme le krigeage.Avantage : (1) estimations précises du total, de la moyenne, de la proportion, et (2) il est possible de mettre en oeuvre des techniques de cartographie statistiques comme le krigeage.Inconvénient : ils n’existe pas d’estimateur non biaisé de la variance d’échantillonnageInconvénient : ils n’existe pas d’estimateur non biaisé de la variance d’échantillonnagefixer le nombre de points avec la résolution qui va dépndre du budget alloué au projet.","code":""},{"path":"SY-QUICK.html","id":"exemple-de-grille","chapter":"6 Echantillonnage aléatoire systématique","heading":"6.2 Exemple de grille","text":"\nFigure 6.1: Exemple de grilles systématiques placées au hasard\n","code":"\nMonEch <- sp::spsample( x = champSP , \n                    cellsize = 20 ,\n                    type = \"regular\")\n\nset.seed(2) # ne marche pas sinon\nMonEch2 <- sp::spsample( x = champSP , \n                    cellsize = 20 ,\n                    type = \"regular\")\n\ntm_shape(champSP) + tm_raster() +\n  tm_shape(shp = MonEch) + tm_symbols(col='black') +\n  tm_shape(shp = MonEch2) + tm_symbols(col='green')+\n\ntm_layout(legend.outside = TRUE)"},{"path":"SY-QUICK.html","id":"théorie","chapter":"6 Echantillonnage aléatoire systématique","heading":"6.3 théorie","text":"La moyenne peut être calculé avec l’estimateur classique de l’échantillonnage aléatoire simple ou SI. la fonction mean de R.","code":""},{"path":"SY-QUICK.html","id":"exemple-de-mise-en-oeuvre","chapter":"6 Echantillonnage aléatoire systématique","heading":"6.4 Exemple de mise en oeuvre","text":"Voici un exemple de mise en oeuvre des calculs proposés au paragraphe précédent.Ainsi, l’estimation de la variance d’échantillonnage dite naïve est \\(0.1801523\\). Cette valeur est supérieure à la valeur fournie par l’estimation avec le deuxième formule: \\(0.1292304\\)","code":"\nterrainSY <- over(MonEch2, champSP)\n\n#change class of object with sample data to SpatialPixelsDataFrame\ngridded(MonEch2) <- TRUE\n\n#compute number of strata from length of data file NB number of sampling units can be odd\nnumberofStrata <- floor(length(MonEch2) / 2)\n\n#cluster the sampling units\nmyStrata <-\n  stratify(MonEch2,\n           nStrata = numberofStrata,\n           equalArea = TRUE,\n           nTry = 100)\n\nmyStrata.df <- as(myStrata, \"data.frame\")\ndata <- cbind(terrainSY, myStrata.df)\n\nvarh <- tapply(data$sim1,\n               INDEX = data$stratumId,\n               FUN = var)\n\nnh <- tapply(data$sim1,\n             INDEX = data$stratumId,\n             FUN = length)\n\nvarmeanh<-varh/nh\nwh<-nh/sum(nh)\nsemeanSTSI<-sqrt(sum(wh^2*varmeanh))\n\nsemeanSI <- sqrt(var(terrainSY$sim1)/length(MonEch2))"},{"path":"CARTO.html","id":"CARTO","chapter":"7 Echantillonnage pour la cartographie","heading":"7 Echantillonnage pour la cartographie","text":"","code":""},{"path":"CARTO.html","id":"caractéristiques","chapter":"7 Echantillonnage pour la cartographie","heading":"7.1 Caractéristiques","text":"Lorsque les paramètres de la population (moyenne ou total, percentiles) à étudier ou pour plusieurs sous-régions n’est pas suffisantLorsque les paramètres de la population (moyenne ou total, percentiles) à étudier ou pour plusieurs sous-régions n’est pas suffisantLa résolution spatiale requise pour la cartographie est bien plus importante que pour les statstisque globaleLa résolution spatiale requise pour la cartographie est bien plus importante que pour les statstisque globaleQuelles Méthodes de cartographie :\nMéthodes d’interpolation spatiale heuristique : Polygones de Thiessen, triangulation, voisin naturel, distance inverse\nInterpolation spatiale basée sur un modèle stochastique : le krigeage\nModèle non spatial : modèle de régression linéaire, arbre de régression, forêt aléatoire\nQuelles Méthodes de cartographie :Méthodes d’interpolation spatiale heuristique : Polygones de Thiessen, triangulation, voisin naturel, distance inverseInterpolation spatiale basée sur un modèle stochastique : le krigeageModèle non spatial : modèle de régression linéaire, arbre de régression, forêt aléatoire","code":""},{"path":"CARTO.html","id":"différents-types-de-plans","chapter":"7 Echantillonnage pour la cartographie","heading":"7.2 Différents types de plans","text":"Echantillonnage pour la cartographie par interpolation spatiale\nPlans d’échantillonnage géométriques\nGrilles régulières\nÉchantillonnage de la couverture spatiale\nPlans d’échantillonnage basés sur des modèles\nEchantillonnage pour la cartographie par interpolation spatialePlans d’échantillonnage géométriquesGrilles régulièresÉchantillonnage de la couverture spatialePlans d’échantillonnage basés sur des modèlesEchantillonnage pour la cartographie avec des modèles de régression ou par arbres de regression\nstratification de l’espace des covariables\nÉchantillonnage par hypercube latin\nEchantillonnage pour la cartographie avec des modèles de régression ou par arbres de regressionstratification de l’espace des covariablesÉchantillonnage par hypercube latin","code":""},{"path":"CARTO.html","id":"la-grille-systématique","chapter":"7 Echantillonnage pour la cartographie","heading":"7.3 La grille systématique","text":"","code":""},{"path":"CARTO.html","id":"caractéristiques-1","chapter":"7 Echantillonnage pour la cartographie","heading":"7.3.1 Caractéristiques","text":"Facile à mettre en œuvreBonne couverture spatialeLa grille ne doit pas être forcément placée au hasardFormes : carrées, triangulaires, hexagonalesPour choisir la résolutionLe maximum de budget mobilisableUn seuil pour l’erreur d’interpollation mais dans ce cas, il est nécessaire de poser des hypothèses sur un modèle de variabilité spatialeAvec un échantillonnage par grille régulière, la répartition des observations est fixe (carré, triangulaire)Avec des zones de forme irrégulière, la couverture spatiale est dans la plupart des cas sous-optimal. Elle amène souvent à des problème aux bordures en augmentant ainsi les effets de bordsAvec des zones de forme irrégulière, la couverture spatiale est dans la plupart des cas sous-optimal. Elle amène souvent à des problème aux bordures en augmentant ainsi les effets de bordsUne couverture spatiale sous-optimale devient plus problématique lorsque nous disposons de données existantes (données anciennes)Une couverture spatiale sous-optimale devient plus problématique lorsque nous disposons de données existantes (données anciennes)En présence de données existantes, nous voulons remplir les espaces videsEn présence de données existantes, nous voulons remplir les espaces vides","code":""},{"path":"CARTO.html","id":"implémentation-1","chapter":"7 Echantillonnage pour la cartographie","heading":"7.3.2 Implémentation","text":"teste ici les fonctions en prenant la parcelle du package spcosaVoici l’exemple pour la grille de type régulière à maille carrée. remarque la présence de zone sans donnée.\nFigure 7.1: Grille régulière\nVoici l’exemple pour la grille de type régulière carré. remarque la présence de zone sans donnée.\nFigure 7.2: Echantillonnage optimisé pour le krigeage\n","code":"\n# regular\nMagrilleReg <- spsample( shpFarmsum ,\n                    type = \"regular\",\n                    cellsize = 30)\n\ntm_shape(shpFarmsum) + \n  tm_borders( ) +\ntm_shape(MagrilleReg) +\n    tm_symbols()\nMagrilleHex <- spsample( shpFarmsum ,\n                    type = \"hexagonal\",\n                    cellsize = 30)\n\ntm_shape(shpFarmsum) + \n  tm_borders( ) +\ntm_shape(MagrilleHex) +\n    tm_symbols()"},{"path":"CARTO.html","id":"echantillonnage-spatial-optimisé","chapter":"7 Echantillonnage pour la cartographie","heading":"7.4 Echantillonnage spatial optimisé","text":"","code":""},{"path":"CARTO.html","id":"définition-3","chapter":"7 Echantillonnage pour la cartographie","heading":"7.4.1 Définition","text":"Dans cette approche, les \\(n\\) observations sont réparties de manière optimale au sein de la zone d’étude. Pour cela, utilise un critère qui minimise la distance entre les observations et les points de la grille régulière de prédiction.\nLa moyenne du carré de la plus courte distance au point j:\\(MCPCD_j = 1/N \\sum^N_{=1}min_j(D_{ij}^2)\\)Le critère \\(MCPCD_j\\) peut être minmisé en utilisant l’algorithme des K-moyenneIl existe un package R spcosa de Walvoort, Brus, Gruijter (2010).Dans cette appraoche, il n’est pas nécessaire de définir un variogramme priori pour l’optimisation de la répartition des \\(n\\) observations. Les strates ainsi définies sont appelées Strates compactes","code":""},{"path":"CARTO.html","id":"mise-en-oeuvre-avec-spcosa","chapter":"7 Echantillonnage pour la cartographie","heading":"7.4.2 Mise en oeuvre avec spcosa","text":"La fonction stratify implémente la stratification dite par strate compacte.Sans option, la commande spcosa::spsample extrait le centroïde des strates obtenues par l’algorithme des K-moyennes.","code":"\n# initialize pseudo random number generator\nset.seed(700124)\n\n# stratify Farmsum into 50 strata\nmyStratification <- stratify(shpFarmsum, nStrata = 30)\n\n# plot stratification\nplot(myStratification)\n# sans option, la commande spcosa::spsample extrait le centroïde de la strate.\nmySamplingPattern <- spsample(myStratification)\n\n# plot sampling pattern\nplot(myStratification, mySamplingPattern)"},{"path":"CARTO.html","id":"en-présence-de-données-existantes","chapter":"7 Echantillonnage pour la cartographie","heading":"7.4.3 En présence de données existantes","text":"Supposons l’existance d’un \\(k\\) échantillons sur la zoneLa commande spcosa::stratify permet de construire les strates compactes en tenant compte de ces observations afin d’optimiser la répartition des échantillons supplémentaires pour la cartographieVoici la répartition des points.","code":"\nk= 20\nset.seed(3)\nMonEchAncien <- spsample( shpFarmsum , k , type = \"random\")\nspplot(MonEchAncien)\n#Set number of new sampling locations to be selected\nn<-100\n\n#Compute total sample size (existing points + new points)\nntot<-n+k\n#Compute geostrata with option priorPoints=priordataEthiopia\nset.seed(314)\nmyStrata <- stratify(shpFarmsum, \n                     cellSize= 2 ,\n                     nStrata = ntot,\n                     priorPoints=MonEchAncien,\n                     nTry=10)\n\n\n#Select sampling points of infill sample (centres of geostrata)\nmySample <- spsample(myStrata)\n#Plot geostrata and sampling points (centres of geostrata)\nplot(myStrata, mySample)"},{"path":"CARTO.html","id":"echantillonnage-pour-la-géostatitique","chapter":"7 Echantillonnage pour la cartographie","heading":"7.5 Echantillonnage pour la géostatitique","text":"Dans une récente étude, Wadoux, Marchant, Lark (2019) propose de rajouter 10 % du nombre total d’observations au plan par couverture spatiale optimisée. Ces points sont positionné à une petite distance de cette sélection au hasard de points.définit premièremement la distance \\(d\\) (20 m dans cette exemple) et le nombre de points \\(m\\) (10 %)tire ensuite au hasard les \\(m\\) points et calcule les nouvelles coordonnées afin de placer au hasard le nouveau points sur un cercle de rayon \\(d\\).Voici la représentation du plan d’échantillonnage pour la géostatistique.\nFigure 7.3: Plan optimisé pour la géostatistique\n","code":"\nmySCsample.df <- as(mySamplingPattern, \"data.frame\") # on extrait ici les coordonnées\n\nh <- 20 # Distance\nm <- round( 0.1  * nrow(mySCsample.df)) + 1\n# Specify separation distances and subsample sizes\n\n# Select random subsample from the spatial coverage sample\nset.seed(314)\nids <-sample(nrow(mySCsample.df),\n             size = m)\nmySubsample <- mySCsample.df[ids,]\n\n# Select locations in random direction at distances h from subsample\n\nplus <- NULL\n\n  dxy <- matrix(nrow=m,ncol=2)\n  angle<-runif(n = m,\n               min = 0,\n               max = 2*pi\n               )\n  dxy[,1] <- h * sin(angle)\n  dxy[,2] <- h * cos(angle)\n  \n  plus.h<-mySubsample+dxy\n  \nmySCsample.df <- rbind(mySCsample.df,plus.h)\n\nmySCsample.df$id <- row.names(mySCsample.df)\ncoordinates(mySCsample.df) <- ~x1+ x2\ntm_shape(shpFarmsum)+ tm_borders()+\n  tm_shape(mySCsample.df) + tm_symbols()"},{"path":"CARTO.html","id":"plan-optimisé-dans-lespace-des-covariables","chapter":"7 Echantillonnage pour la cartographie","heading":"7.6 Plan optimisé dans l’espace des covariables","text":"","code":""},{"path":"CARTO.html","id":"définition-4","chapter":"7 Echantillonnage pour la cartographie","heading":"7.6.1 Définition","text":"Dans cette partie, l’échantillons doit permettre de calibrer un modèle de regression avec des covariables spatialisées. Il existe de nombreuse méthodes pour sélectionner des unités d’échantillonnage de sorte qu’elle permette dcLHSSurface response design","code":""},{"path":"CARTO.html","id":"données","chapter":"7 Echantillonnage pour la cartographie","heading":"7.6.2 Données","text":"Comme présenté dans le chapitre sur les données, nous utilisons un jeu de données consitué de grille décrivant un ensemble de caractéristiques d’une parcelle en Australie.","code":"\n#Read data with coordinates and other attributes of fine grid (discretization of study area)\nload(file=\"Data/HunterValley4Practicals.RData\")\ngrdHunterValley2 <- grdHunterValley\ncoordinates(grdHunterValley2) <- c('Easting','Northing')\ngridded(grdHunterValley2) <- TRUE\n\ntm_shape(grdHunterValley2) + \n  tm_raster(col = c(\"elevation_m\",\"slope_deg\",\"cti\",\"ndvi\") )"},{"path":"CARTO.html","id":"mise-en-oeuvre-avec-lalgorithme-k-moyennes","chapter":"7 Echantillonnage pour la cartographie","heading":"7.6.3 Mise en oeuvre avec l’algorithme K-moyennes","text":"Dans cetteIl est possible de représenter les unités d’échantillonnage dans l’espace géographique:\nFigure 7.4: Plan optimisé par K-moyenne sur les covariables, représentation dans l’espace géographique\nMais également dans l’espace des covariables. Ici, retient l’altitude et le CTI.\nFigure 7.5: Plan optimisé par K-moyenne sur les covariables, représentation dans l’espace des covariables\n\nFigure 7.6: Plan optimisé par K-moyenne sur les covariables, représentation dans l’espace des covariables\n","code":"\n#Set number of sampling locations to be selected\nn<-20\n\n#Compute clusters\nset.seed(314)\nmyClusters <- kmeans(scale(grdHunterValley[,c(3,4,6,7)]), centers=n, iter.max=100,nstart=10)\ngrdHunterValley$clusters <- myClusters$cluster\n\n#Select locations closest to the centers of the clusters\nrdist.out <- rdist(x1=myClusters$centers,x2=scale(grdHunterValley[,c(3,4,5,6,7)]))\nids.mindist <- apply(rdist.out,MARGIN=1,which.min)\nmySample <- grdHunterValley[ids.mindist,]\nggplot(grdHunterValley) +\n  geom_tile(mapping = aes(x = Easting, y = Northing, fill = factor(clusters))) +\n  scale_fill_discrete(name = \"cluster\") +\n  geom_point(data=mySample,mapping=aes(x=Easting,y=Northing),size=2) +\n  scale_x_continuous(name = \"\") +\n  scale_y_continuous(name = \"\") +\n  coord_fixed() +\n  theme(legend.position=\"none\")\nggplot(grdHunterValley) +\n  geom_point(mapping=aes(y=elevation_m,x=cti,colour=factor(clusters)), size = .51) +\n  geom_point(data=mySample,mapping=aes(y=elevation_m,x=cti),size=1.5) +\n  scale_y_continuous(name = \"Elevation\") +\n  scale_x_continuous(name = \"ndvi\") +\n  theme(legend.position=\"none\")\nggplot(grdHunterValley) +\n  geom_point(mapping=aes(y=elevation_m,x=slope_deg,colour=factor(clusters)), size = .51) +\n  geom_point(data=mySample,mapping=aes(y=elevation_m,x=cti),size=1.5) +\n  scale_y_continuous(name = \"Elevation\") +\n  scale_x_continuous(name = \"Slope\") +\n  theme(legend.position=\"none\")"},{"path":"Script.html","id":"Script","chapter":"8 Script final","heading":"8 Script final","text":"Ce chapitre rassemble l’ensemble des commandes utilisées dans un script fonctionnel.","code":"\nsetwd(\"C:/Users/nsaby/Dropbox/fac/tp/sampling/\")\n\n# R\n# Probablity sampling : SI, STSI (spatial et covariable), SY\n# impl?menter le workflow dans R/ArcGis avec vecteur et rasteur\n# Calculer la moyenne par SI, STSI et SY\n\n# MB sampling : grid,  infill sampling\n# \n\n\n# test 1 avec des ?chantillonnage al?atoire --------------\n\nlibrary(sp)\nlibrary(tmap)\n# library(maptools)\n# library(mapview)\n# library(rgdal)\n\nchamp <- read.csv('./data/simulatedField_1Exp25.csv')\n\n# Simuler une Aléatoire Simple (SI)\nn = 100\n\n# Creation des identifiants des lignes\nid = 1:10000\n# ou\nid = seq( from = 1, to = 10000, by = 1)\n# tire au hasard n valeurs parmi 10000\nMesIds <- sample( x = id  , size = n)\n\nMesIds <- sort(MesIds)\n# Les coordonn?es\nchamp[MesIds,1:2]\n\n\n# Extraire les valeurs de carbone, simuler le terrain\nterrain <- champ[ MesIds, \"sim1\" ]\n\n# moyenne estim?e ? partir de l'?chantillon \nMoyEst <- mean(terrain)\n# Variance d'?chantillonnage de MoyEst\nV <- var(terrain) / n\n\n# vraie moyenne\nMoy <- mean(champ$sim1)\n# calcul du quantile\nz <- qnorm(p = 1- (0.05/2), mean = 0, sd = 1)\n# si n est petit < 30\nz <- qt(p = 1- (0.05/2) , df = 20-1)\n# calcul de l'interval de confiance\nIC <- z * sqrt(V)\n# Est-ce que la vraie moyenne est dans l'IC\nMoy < MoyEst + IC\nMoy > MoyEst - IC\n2 *IC\n\ncbind(MoyEst, ICbas = MoyEst - IC, ICHaut =MoyEst + IC, Moy)\n\n# Tester le package sp ------\nlibrary(sp)\n# Copie du tableau dans un nouvel objet\nchampSP <- champ\n\n# transformer en un raster\ncoordinates(champSP) <- c('s1','s2')  \n\n# structure de l'objet\nstr(champSP)\n\nspplot(champSP)\n\n# transforme en raster le semi de points\ngridded(champSP) <- TRUE\nspplot(champSP)\nstr(champSP)\n\n# SI\nMonEch <- spsample( champSP , n , type = \"random\")\nplot(champSP)\npoints(MonEch, pch = 3)\n\n# regular\nMonEch <- spsample( champSP ,\n                    type = \"regular\",\n                    cellsize = 10)\nplot(champSP)\npoints(MonEch, pch = 3)"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
